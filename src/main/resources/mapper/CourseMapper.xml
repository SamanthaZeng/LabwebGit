<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zxl.web.mapper.CourseMapper">
  <resultMap id="BaseResultMap" type="zxl.web.domain.Course">
    <id column="clsid" jdbcType="INTEGER" property="clsid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="cabstract" jdbcType="VARCHAR" property="abstract" />
    <result column="teachingobject" jdbcType="INTEGER" property="teachingobject" />
    <result column="course_type" jdbcType="INTEGER" property="courseType" />
    <result column="classhour" jdbcType="INTEGER" property="classhour" />
  </resultMap>
  <sql id="Base_Column_List">
    clsid, name, abstract, teachingobject, course_type, classhour
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course
    where clsid = #{clsid,jdbcType=INTEGER}
  </select>
  <select id="selectCourseId" parameterType="zxl.web.domain.Course" resultMap="BaseResultMap">
    select *
    from course
    where name = #{name,jdbcType=VARCHAR}
    <if test="abstract != null">
      and abstract = #{abstract,jdbcType=VARCHAR}
    </if>
    <if test="teachingobject != null">
      and teachingobject = #{teachingobject,jdbcType=INTEGER}
    </if>
    <if test="courseType != null">
      and course_type = #{courseType,jdbcType=INTEGER}
    </if>
    <if test="classhour != null">
      and classhour = #{classhour,jdbcType=INTEGER}
    </if>

  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course
    where clsid = #{clsid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="zxl.web.domain.Course">
    insert into course (clsid, name, abstract,
      teachingobject, course_type, classhour
      )
    values (#{clsid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{abstract,jdbcType=VARCHAR},
      #{teachingobject,jdbcType=INTEGER}, #{courseType,jdbcType=INTEGER}, #{classhour,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="zxl.web.domain.Course">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="clsid != null">
        clsid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="abstract != null">
        abstract,
      </if>
      <if test="teachingobject != null">
        teachingobject,
      </if>
      <if test="courseType != null">
        course_type,
      </if>
      <if test="classhour != null">
        classhour,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="clsid != null">
        #{clsid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="abstract != null">
        #{abstract,jdbcType=VARCHAR},
      </if>
      <if test="teachingobject != null">
        #{teachingobject,jdbcType=INTEGER},
      </if>
      <if test="courseType != null">
        #{courseType,jdbcType=INTEGER},
      </if>
      <if test="classhour != null">
        #{classhour,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="zxl.web.domain.Course">
    update course
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="abstract != null">
        abstract = #{abstract,jdbcType=VARCHAR},
      </if>
      <if test="teachingobject != null">
        teachingobject = #{teachingobject,jdbcType=INTEGER},
      </if>
      <if test="courseType != null">
        course_type = #{courseType,jdbcType=INTEGER},
      </if>
      <if test="classhour != null">
        classhour = #{classhour,jdbcType=INTEGER},
      </if>
    </set>
    where clsid = #{clsid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="zxl.web.domain.Course">
    update course
    set name = #{name,jdbcType=VARCHAR},
      abstract = #{abstract,jdbcType=VARCHAR},
      teachingobject = #{teachingobject,jdbcType=INTEGER},
      course_type = #{courseType,jdbcType=INTEGER},
      classhour = #{classhour,jdbcType=INTEGER}
    where clsid = #{clsid,jdbcType=INTEGER}
  </update>
  <select id="queryAll" resultMap="BaseResultMap">
    select * from course
  </select>
</mapper>